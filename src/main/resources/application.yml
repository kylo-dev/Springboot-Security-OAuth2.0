server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# database
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 개인 PC에서 만들어놓은 Database이름을 작성
    url: jdbc:mysql://localhost:3306/security_db?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    # mysql에 생성한 사용자 계정 정보를 작성
    username: gyeom
    password: 3677

  # Spring Security
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 1088083338101-quop1n166hpe33eg3480pj8nbaensgrk.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
          facebook:
            client-id: 850791733338400
            client-secret: 7b3572092faba8e7a39917d4129612cf
            scope: public_profile, email
          naver:
            client-id: 7DloIgUmPVn5KMlCO_Yd
            client-secret: Huryy9bYAe
            scope: name, email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 key 값으로 네이버가 리턴해줌

  # Spring data jpa
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: true
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true